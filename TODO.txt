Finally went through all of these.  The file system operations are mostly done but none are tested.  Since they are thin wrappers around File function calls it won't take me long to wrap this all up.  Also I am on the trail of a solution for the BinData (and UUID) issues... basically a byte ordering problem but Nhi already worked that out, I am just trying out a more complete solution as there are incompatibilities right now between binary data generated within HoM and outside of HoM.  More later on that.

====== TopLevel functions =======

allocatePorts(              - implemented though it doesn't do much: server_misc.js, pure js function
argumentsToArray(           - implemented, defined in utils.js
assert(                     - implemented, referenced in numerous js tests, asserts.js is where it is defined

benchFinish(                - these are all native functions for running benchmark tests.  I don't see a compelling reason right now to implement them.  low priority for HoM
benchRun(      
benchRunSync(  
benchStart(    

cat(                        - implemented, to-be-tested and pushed to github
clearRawMongoProgramOutput( - native function, not 100% on what this is meant to do, investigating further
connectionURLTheSame(       - implemented, look in servers.js, previously not initialized in scope, next push will have it initialized
createMongoArgs(            - implemented, look in servers.js, 
cd(                         - implemented, to-be-tested and pushed to github
compare(                    - implemented, simple wrapper around print(), look in utils.js
chatty(                     - implemented, simple wrapper around print(), look in utils.js
compareOn(                  - implemented, simple wrapper around print(), look in utils.js
copyDbpath(                 - native function, looks like the client performs the copy action however... not sure I want to implement this but would be trivial to do so
checkProgram(               - native function, not implemented, im not very interested in implementing external process calling/mgmt tools at the moment but could do that in the future
connect(                    - implemented, see bottom of mongo.js
decodeURIComponent(         - not seeing the implementation in official code, still investigating
doassert(                   - implemented, see asserts.js
decodeURI(                  - not seeing the implementation in official code, still investigating
encodeURI(                  - not seeing the implementation in official code, still investigating
encodeURIComponent(         - not seeing the implementation in official code, still investigating
escape(                     - implemented?  may refer to RegExp.escape() which exists
eval(                       - implemented
fork(                       - no plan to implement, forks the mongo shell process and HoM is a different beast
friendlyEqual(              - implemented
fuzzFile(                   - implementation in-progress
getHostName(                - implemented, to-be-tested and pushed to github
gc(                         - implemented
getMemInfo(                 - implementation in-progress
hasOwnProperty(             - may be a native JS function, not defined by mongo shell
help(                       - implemented
hex_md5(                    - implemented
hostname(                   - implemented, to-be-tested and pushed to github
interpreterVersion(         - not-yet-implemented... not sure what to put in here TBH, HoM version? compatible mongod version?
isFinite(                   - may be a native JS function, not defined by mongo shell            
isNaN(                      - may be a native JS function, not defined by mongo shell
isObject(                   - may be a native JS function, not defined by mongo shell
isString(                   - may be a native JS function, not defined by mongo shell
isNumber(                   - may be a native JS function, not defined by mongo shell

jsTestFile(                 - no-plan-to-implement, related to their own testing suite and facilities
jsTestLog(      
jsTestName(     
jsTestOptions(  
jsTestPath(

listFiles(                  - implemented, to-be-tested and pushed to github
load(                       - implemented, defined in JS, inherited, should work already but let me know if it doesn't
ls(                         - implemented, to-be-tested and pushed to github
md5sumFile(                 - implementation in-progress
myPort(                     - implemented, look in servers.js
mkdir(                      - implemented, to-be-tested and pushed to github
printShardingStatus(        - implemented, in shardingtest.js not yet loaded by MongoScope, fixed in next push
printjsononeline(           - implemented, look in types.js
pwd(                        - implemented, to-be-tested and pushed to github
parseFloat(                 - may be a native JS function
print(                      - implemented
printStackTrace(            - implemented
propertyIsEnumerable(       - may be a native JS function
parseInt(                   - may be a native JS function
printShardingSizes(         - implemented, defined in shardingtest.js
printjson(                  - implemented
quit(                       - implementation in-progress (pass-through as previously requested)
removeFile(                 - implementation pending
rs(                         - implemented, defined in utils.js
runProgram(                 - no plan to implement external process management through HoM
replSetMemberStatePrompt(  
run(                        - no plan to implement external process management through HoM
rawMongoProgramOutput(      - not 100% sure what this does but based on the evidence: no plan to implement external process management through HoM
resetDbpath(                - native function, looks like the client performs the "reset" action however... not sure I want to implement this but would be trivial to do so
runMongoProgram(            - no plan to implement external process management through HoM
sh(                         - implemented, defined in utils_sh.js
startMongoProgram(          - no plan to implement external process management through HoM     
startParallelShell(         - no plan to implement external process management through HoM
shellAutocomplete(          - implemented
startMongoProgramNoConnect( - no plan to implement external process management through HoM
stopMongoProgram(           - no plan to implement external process management through HoM
shellHelper(                - implemented
startMongod(                - no plan to implement external process management through HoM               
stopMongoProgramByPid(      - no plan to implement external process management through HoM
shellPrint(                 - implemented
startMongodEmpty(           - no plan to implement external process management through HoM
stopMongod(                 - no plan to implement external process management through HoM
shellPrintHelper(           - implemented
startMongodNoReset(         - no plan to implement external process management through HoM
setJsTestOption(            - implemented
skipIfTestingReplication(   - implemented
startMongodTest(            - no plan to implement external process management through HoM
setVerboseShell(            - implemented
sleep(                      - implemented
startMongos(                - no plan to implement external process management through HoM
toString(                   - may be a native JS function
tojsonObject(               - may be a native JS function
toLocaleString(             - may be a native JS function
tojson(                     - implemented
tojsononeline(              - implemented
unescape(                   - may be a native JS function
valueOf(                    - implemented
version(                    - not yet implemented, same problem as interpreterVersion()
waitProgram(                - no plan to implement external process management through HoM

====== Classes =======

Array(              - implemented/native JS
BinData(            - implemented but buggy (byte order issues being worked on in converter)
Boolean(            - implemented
DB(                 - implemented
DBQuery(            - implemented
DBCollection(       - implemented
DBRef(              - implemented
DBPointer(          - implemented
Date(               - implemented/native JS
EventGenerator(     - implemented
HexData(            - implemented
ISODate(            - implemented
MD5(                - implemented
Map(                - implemented
MongoRunner(        - implemented but i wouldn't use it since it is all about external process support
MapReduceResult(    - implemented
Mongo(              - implemented
MongodRunner(       - implemented but i wouldn't use it since it is all about external process support
Number(             - implemented
NumberInt(          - implemented
NumberLong(         - implemented
ObjectId(           - implemented
ParallelTester(     - implemented
Random(             - implemented
ReplSetTest(        - implemented
RegExp(             - implemented
ReplTest(           - implemented
ReplSetBridge(      - implemented
ShardingTest(       - implemented
ScopedThread(       - implemented      
String(             - implemented
SyncCCTest(         - implemented
Timestamp(          - implemented
Thread(             - implemented
UUID(               - implemented but buggy (same issues as BinData, solution in-progress)
ToolTest(           - implemented

====== Objects =======

Out of sheer laziness I am going to say that 99-100% of these are implemented, though some are expected to be defined as part of the normal operations of the shell (ex. db is defined when you connect... "db = connect('connectionURL');").

args               
bsonsize
constructor
create
d                    
db                   
defineProperties
defineProperty
false           
freeze          
Geo                       
getOwnPropertyDescriptor  
getPrototypeOf
getOwnPropertyNames
Infinity             
isExtensible         
isFrozen             
isSealed
JSON            
jsTest          
keys
Math              
MinKey            
MR                
MaxKey            
NaN          
null
preventExtensions      
prototype
seal                         
TestData            
testingReplication  
true
undefined  